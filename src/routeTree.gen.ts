/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as RankingRouteImport } from './routes/ranking'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as PlayVideoRouteImport } from './routes/playVideo'
import { Route as CourseDetailRouteImport } from './routes/courseDetail'
import { Route as AboutRouteImport } from './routes/about'
import { Route as TESTRouteImport } from './routes/TEST'
import { Route as IndexRouteImport } from './routes/index'
import { Route as CoursesIndexRouteImport } from './routes/courses/index'
import { Route as AuthRegisterRouteImport } from './routes/auth/register'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as CoursesCourseIdIndexRouteImport } from './routes/courses/$courseId/index'
import { Route as CoursesCourseIdLessonIdRouteImport } from './routes/courses/$courseId/$lessonId'

const RankingRoute = RankingRouteImport.update({
  id: '/ranking',
  path: '/ranking',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const PlayVideoRoute = PlayVideoRouteImport.update({
  id: '/playVideo',
  path: '/playVideo',
  getParentRoute: () => rootRouteImport,
} as any)
const CourseDetailRoute = CourseDetailRouteImport.update({
  id: '/courseDetail',
  path: '/courseDetail',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const TESTRoute = TESTRouteImport.update({
  id: '/TEST',
  path: '/TEST',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const CoursesIndexRoute = CoursesIndexRouteImport.update({
  id: '/courses/',
  path: '/courses/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const CoursesCourseIdIndexRoute = CoursesCourseIdIndexRouteImport.update({
  id: '/courses/$courseId/',
  path: '/courses/$courseId/',
  getParentRoute: () => rootRouteImport,
} as any)
const CoursesCourseIdLessonIdRoute = CoursesCourseIdLessonIdRouteImport.update({
  id: '/courses/$courseId/$lessonId',
  path: '/courses/$courseId/$lessonId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/TEST': typeof TESTRoute
  '/about': typeof AboutRoute
  '/courseDetail': typeof CourseDetailRoute
  '/playVideo': typeof PlayVideoRoute
  '/profile': typeof ProfileRoute
  '/ranking': typeof RankingRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/courses': typeof CoursesIndexRoute
  '/courses/$courseId/$lessonId': typeof CoursesCourseIdLessonIdRoute
  '/courses/$courseId': typeof CoursesCourseIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/TEST': typeof TESTRoute
  '/about': typeof AboutRoute
  '/courseDetail': typeof CourseDetailRoute
  '/playVideo': typeof PlayVideoRoute
  '/profile': typeof ProfileRoute
  '/ranking': typeof RankingRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/courses': typeof CoursesIndexRoute
  '/courses/$courseId/$lessonId': typeof CoursesCourseIdLessonIdRoute
  '/courses/$courseId': typeof CoursesCourseIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/TEST': typeof TESTRoute
  '/about': typeof AboutRoute
  '/courseDetail': typeof CourseDetailRoute
  '/playVideo': typeof PlayVideoRoute
  '/profile': typeof ProfileRoute
  '/ranking': typeof RankingRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/courses/': typeof CoursesIndexRoute
  '/courses/$courseId/$lessonId': typeof CoursesCourseIdLessonIdRoute
  '/courses/$courseId/': typeof CoursesCourseIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/TEST'
    | '/about'
    | '/courseDetail'
    | '/playVideo'
    | '/profile'
    | '/ranking'
    | '/auth/login'
    | '/auth/register'
    | '/courses'
    | '/courses/$courseId/$lessonId'
    | '/courses/$courseId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/TEST'
    | '/about'
    | '/courseDetail'
    | '/playVideo'
    | '/profile'
    | '/ranking'
    | '/auth/login'
    | '/auth/register'
    | '/courses'
    | '/courses/$courseId/$lessonId'
    | '/courses/$courseId'
  id:
    | '__root__'
    | '/'
    | '/TEST'
    | '/about'
    | '/courseDetail'
    | '/playVideo'
    | '/profile'
    | '/ranking'
    | '/auth/login'
    | '/auth/register'
    | '/courses/'
    | '/courses/$courseId/$lessonId'
    | '/courses/$courseId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  TESTRoute: typeof TESTRoute
  AboutRoute: typeof AboutRoute
  CourseDetailRoute: typeof CourseDetailRoute
  PlayVideoRoute: typeof PlayVideoRoute
  ProfileRoute: typeof ProfileRoute
  RankingRoute: typeof RankingRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
  CoursesIndexRoute: typeof CoursesIndexRoute
  CoursesCourseIdLessonIdRoute: typeof CoursesCourseIdLessonIdRoute
  CoursesCourseIdIndexRoute: typeof CoursesCourseIdIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/ranking': {
      id: '/ranking'
      path: '/ranking'
      fullPath: '/ranking'
      preLoaderRoute: typeof RankingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/playVideo': {
      id: '/playVideo'
      path: '/playVideo'
      fullPath: '/playVideo'
      preLoaderRoute: typeof PlayVideoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/courseDetail': {
      id: '/courseDetail'
      path: '/courseDetail'
      fullPath: '/courseDetail'
      preLoaderRoute: typeof CourseDetailRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/TEST': {
      id: '/TEST'
      path: '/TEST'
      fullPath: '/TEST'
      preLoaderRoute: typeof TESTRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/courses/': {
      id: '/courses/'
      path: '/courses'
      fullPath: '/courses'
      preLoaderRoute: typeof CoursesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/courses/$courseId/': {
      id: '/courses/$courseId/'
      path: '/courses/$courseId'
      fullPath: '/courses/$courseId'
      preLoaderRoute: typeof CoursesCourseIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/courses/$courseId/$lessonId': {
      id: '/courses/$courseId/$lessonId'
      path: '/courses/$courseId/$lessonId'
      fullPath: '/courses/$courseId/$lessonId'
      preLoaderRoute: typeof CoursesCourseIdLessonIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  TESTRoute: TESTRoute,
  AboutRoute: AboutRoute,
  CourseDetailRoute: CourseDetailRoute,
  PlayVideoRoute: PlayVideoRoute,
  ProfileRoute: ProfileRoute,
  RankingRoute: RankingRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
  CoursesIndexRoute: CoursesIndexRoute,
  CoursesCourseIdLessonIdRoute: CoursesCourseIdLessonIdRoute,
  CoursesCourseIdIndexRoute: CoursesCourseIdIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
