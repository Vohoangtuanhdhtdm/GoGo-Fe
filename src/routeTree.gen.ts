/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as RankingRouteImport } from './routes/ranking'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as CourseIndexRouteImport } from './routes/course/index'
import { Route as AuthRegisterRouteImport } from './routes/auth/register'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as CourseCourseIdIndexRouteImport } from './routes/course/$courseId/index'
import { Route as AdminCourseIndexRouteImport } from './routes/admin/course/index'
import { Route as AdminRoleAssignRoleRouteImport } from './routes/admin/role/assign-role'
import { Route as AdminCourseCreateRouteImport } from './routes/admin/course/create'
import { Route as AdminCourseCourseIdUpdateRouteImport } from './routes/admin/course/$courseId/update'
import { Route as CourseCourseIdModulesModulesIdIndexRouteImport } from './routes/course/$courseId/modules/$modulesId/index'
import { Route as CourseCourseIdModulesModulesIdLessonsLessonIdRouteImport } from './routes/course/$courseId/modules/$modulesId/lessons/$lessonId'

const RankingRoute = RankingRouteImport.update({
  id: '/ranking',
  path: '/ranking',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const CourseIndexRoute = CourseIndexRouteImport.update({
  id: '/course/',
  path: '/course/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const CourseCourseIdIndexRoute = CourseCourseIdIndexRouteImport.update({
  id: '/course/$courseId/',
  path: '/course/$courseId/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminCourseIndexRoute = AdminCourseIndexRouteImport.update({
  id: '/admin/course/',
  path: '/admin/course/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRoleAssignRoleRoute = AdminRoleAssignRoleRouteImport.update({
  id: '/admin/role/assign-role',
  path: '/admin/role/assign-role',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminCourseCreateRoute = AdminCourseCreateRouteImport.update({
  id: '/admin/course/create',
  path: '/admin/course/create',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminCourseCourseIdUpdateRoute =
  AdminCourseCourseIdUpdateRouteImport.update({
    id: '/admin/course/$courseId/update',
    path: '/admin/course/$courseId/update',
    getParentRoute: () => rootRouteImport,
  } as any)
const CourseCourseIdModulesModulesIdIndexRoute =
  CourseCourseIdModulesModulesIdIndexRouteImport.update({
    id: '/course/$courseId/modules/$modulesId/',
    path: '/course/$courseId/modules/$modulesId/',
    getParentRoute: () => rootRouteImport,
  } as any)
const CourseCourseIdModulesModulesIdLessonsLessonIdRoute =
  CourseCourseIdModulesModulesIdLessonsLessonIdRouteImport.update({
    id: '/course/$courseId/modules/$modulesId/lessons/$lessonId',
    path: '/course/$courseId/modules/$modulesId/lessons/$lessonId',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/profile': typeof ProfileRoute
  '/ranking': typeof RankingRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/course': typeof CourseIndexRoute
  '/admin/course/create': typeof AdminCourseCreateRoute
  '/admin/role/assign-role': typeof AdminRoleAssignRoleRoute
  '/admin/course': typeof AdminCourseIndexRoute
  '/course/$courseId': typeof CourseCourseIdIndexRoute
  '/admin/course/$courseId/update': typeof AdminCourseCourseIdUpdateRoute
  '/course/$courseId/modules/$modulesId': typeof CourseCourseIdModulesModulesIdIndexRoute
  '/course/$courseId/modules/$modulesId/lessons/$lessonId': typeof CourseCourseIdModulesModulesIdLessonsLessonIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/profile': typeof ProfileRoute
  '/ranking': typeof RankingRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/course': typeof CourseIndexRoute
  '/admin/course/create': typeof AdminCourseCreateRoute
  '/admin/role/assign-role': typeof AdminRoleAssignRoleRoute
  '/admin/course': typeof AdminCourseIndexRoute
  '/course/$courseId': typeof CourseCourseIdIndexRoute
  '/admin/course/$courseId/update': typeof AdminCourseCourseIdUpdateRoute
  '/course/$courseId/modules/$modulesId': typeof CourseCourseIdModulesModulesIdIndexRoute
  '/course/$courseId/modules/$modulesId/lessons/$lessonId': typeof CourseCourseIdModulesModulesIdLessonsLessonIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/profile': typeof ProfileRoute
  '/ranking': typeof RankingRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/course/': typeof CourseIndexRoute
  '/admin/course/create': typeof AdminCourseCreateRoute
  '/admin/role/assign-role': typeof AdminRoleAssignRoleRoute
  '/admin/course/': typeof AdminCourseIndexRoute
  '/course/$courseId/': typeof CourseCourseIdIndexRoute
  '/admin/course/$courseId/update': typeof AdminCourseCourseIdUpdateRoute
  '/course/$courseId/modules/$modulesId/': typeof CourseCourseIdModulesModulesIdIndexRoute
  '/course/$courseId/modules/$modulesId/lessons/$lessonId': typeof CourseCourseIdModulesModulesIdLessonsLessonIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/profile'
    | '/ranking'
    | '/auth/login'
    | '/auth/register'
    | '/course'
    | '/admin/course/create'
    | '/admin/role/assign-role'
    | '/admin/course'
    | '/course/$courseId'
    | '/admin/course/$courseId/update'
    | '/course/$courseId/modules/$modulesId'
    | '/course/$courseId/modules/$modulesId/lessons/$lessonId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/profile'
    | '/ranking'
    | '/auth/login'
    | '/auth/register'
    | '/course'
    | '/admin/course/create'
    | '/admin/role/assign-role'
    | '/admin/course'
    | '/course/$courseId'
    | '/admin/course/$courseId/update'
    | '/course/$courseId/modules/$modulesId'
    | '/course/$courseId/modules/$modulesId/lessons/$lessonId'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/profile'
    | '/ranking'
    | '/auth/login'
    | '/auth/register'
    | '/course/'
    | '/admin/course/create'
    | '/admin/role/assign-role'
    | '/admin/course/'
    | '/course/$courseId/'
    | '/admin/course/$courseId/update'
    | '/course/$courseId/modules/$modulesId/'
    | '/course/$courseId/modules/$modulesId/lessons/$lessonId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  ProfileRoute: typeof ProfileRoute
  RankingRoute: typeof RankingRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
  CourseIndexRoute: typeof CourseIndexRoute
  AdminCourseCreateRoute: typeof AdminCourseCreateRoute
  AdminRoleAssignRoleRoute: typeof AdminRoleAssignRoleRoute
  AdminCourseIndexRoute: typeof AdminCourseIndexRoute
  CourseCourseIdIndexRoute: typeof CourseCourseIdIndexRoute
  AdminCourseCourseIdUpdateRoute: typeof AdminCourseCourseIdUpdateRoute
  CourseCourseIdModulesModulesIdIndexRoute: typeof CourseCourseIdModulesModulesIdIndexRoute
  CourseCourseIdModulesModulesIdLessonsLessonIdRoute: typeof CourseCourseIdModulesModulesIdLessonsLessonIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/ranking': {
      id: '/ranking'
      path: '/ranking'
      fullPath: '/ranking'
      preLoaderRoute: typeof RankingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/course/': {
      id: '/course/'
      path: '/course'
      fullPath: '/course'
      preLoaderRoute: typeof CourseIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/course/$courseId/': {
      id: '/course/$courseId/'
      path: '/course/$courseId'
      fullPath: '/course/$courseId'
      preLoaderRoute: typeof CourseCourseIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/course/': {
      id: '/admin/course/'
      path: '/admin/course'
      fullPath: '/admin/course'
      preLoaderRoute: typeof AdminCourseIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/role/assign-role': {
      id: '/admin/role/assign-role'
      path: '/admin/role/assign-role'
      fullPath: '/admin/role/assign-role'
      preLoaderRoute: typeof AdminRoleAssignRoleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/course/create': {
      id: '/admin/course/create'
      path: '/admin/course/create'
      fullPath: '/admin/course/create'
      preLoaderRoute: typeof AdminCourseCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/course/$courseId/update': {
      id: '/admin/course/$courseId/update'
      path: '/admin/course/$courseId/update'
      fullPath: '/admin/course/$courseId/update'
      preLoaderRoute: typeof AdminCourseCourseIdUpdateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/course/$courseId/modules/$modulesId/': {
      id: '/course/$courseId/modules/$modulesId/'
      path: '/course/$courseId/modules/$modulesId'
      fullPath: '/course/$courseId/modules/$modulesId'
      preLoaderRoute: typeof CourseCourseIdModulesModulesIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/course/$courseId/modules/$modulesId/lessons/$lessonId': {
      id: '/course/$courseId/modules/$modulesId/lessons/$lessonId'
      path: '/course/$courseId/modules/$modulesId/lessons/$lessonId'
      fullPath: '/course/$courseId/modules/$modulesId/lessons/$lessonId'
      preLoaderRoute: typeof CourseCourseIdModulesModulesIdLessonsLessonIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  ProfileRoute: ProfileRoute,
  RankingRoute: RankingRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
  CourseIndexRoute: CourseIndexRoute,
  AdminCourseCreateRoute: AdminCourseCreateRoute,
  AdminRoleAssignRoleRoute: AdminRoleAssignRoleRoute,
  AdminCourseIndexRoute: AdminCourseIndexRoute,
  CourseCourseIdIndexRoute: CourseCourseIdIndexRoute,
  AdminCourseCourseIdUpdateRoute: AdminCourseCourseIdUpdateRoute,
  CourseCourseIdModulesModulesIdIndexRoute:
    CourseCourseIdModulesModulesIdIndexRoute,
  CourseCourseIdModulesModulesIdLessonsLessonIdRoute:
    CourseCourseIdModulesModulesIdLessonsLessonIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
